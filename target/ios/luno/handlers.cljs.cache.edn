;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name luno.handlers, :imports nil, :requires {re-frame.core re-frame.core, s schema.core, schema.core schema.core, clojure.walk clojure.walk, ajax.core ajax.core, luno.config luno.config, luno.schema luno.schema, db luno.db, luno.db luno.db}, :uses {POST ajax.core, keywordize-keys clojure.walk, app-db luno.schema, schema luno.schema, bing-appid luno.config, dispatch re-frame.core, GET ajax.core, after re-frame.core, register-handler re-frame.core, openweathermap-appid luno.config}, :defs {check-and-throw {:protocol-inline nil, :meta {:file "/Users/alwxndr/Documents/Dev/_my/luno-react-native/src/luno/handlers.cljs", :line 13, :column 7, :end-line 13, :end-column 22, :arglists (quote ([a-schema db])), :doc "throw an exception if db doesn't match the schema."}, :name luno.handlers/check-and-throw, :variadic false, :file "/Users/alwxndr/Documents/Dev/_my/luno-react-native/src/luno/handlers.cljs", :end-column 22, :method-params ([a-schema db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a-schema db])), :doc "throw an exception if db doesn't match the schema."}, validate-schema-mw {:name luno.handlers/validate-schema-mw, :file "/Users/alwxndr/Documents/Dev/_my/luno-react-native/src/luno/handlers.cljs", :line 19, :column 1, :end-line 19, :end-column 24, :meta {:file "/Users/alwxndr/Documents/Dev/_my/luno-react-native/src/luno/handlers.cljs", :line 19, :column 6, :end-line 19, :end-column 24}}}, :require-macros {s schema.core, schema.core schema.core}, :cljs.analyzer/constants {:seen #{:load-city-image :delete-city :where :eq :load-from-db :name :loading? :load-from-db-city :city :response-format :drawer :set-shared-tab :load-city-image-failure :headers :error-handler :load-weather :android :initialize-schema :load-city-image-success :shared :d :error :json :set-android-drawer :tab :load-weather-success :handler :bing-image :load-weather-failure :data :results}, :order [:initialize-schema :load-from-db :load-from-db-city :data :name :load-weather :response-format :handler :error-handler :json :load-weather-success :load-weather-failure :loading? :load-city-image :city :where :eq :error :headers :load-city-image-success :load-city-image-failure :results :d :bing-image :set-android-drawer :android :drawer :set-shared-tab :shared :tab :delete-city]}, :doc nil}
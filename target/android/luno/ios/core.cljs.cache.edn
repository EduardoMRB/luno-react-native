;; Analyzed by ClojureScript 1.7.170
{:use-macros {require-img env.require-img}, :excludes #{}, :name luno.ios.core, :imports nil, :requires {luno.handlers luno.handlers, reagent.core reagent.core, r reagent.core, luno.shared.scenes.main luno.shared.scenes.main, s luno.ios.styles, luno.ios.styles luno.ios.styles, ui luno.ui, luno.shared.scenes.about luno.shared.scenes.about, clojure.string clojure.string, luno.subs luno.subs, luno.ui luno.ui, re-frame.core re-frame.core}, :uses {main-scene luno.shared.scenes.main, atom reagent.core, subscribe re-frame.core, dispatch-sync re-frame.core, about-scene luno.shared.scenes.about, dispatch re-frame.core, blank? clojure.string}, :defs {logo-img {:name luno.ios.core/logo-img, :file "src/luno/ios/core.cljs", :line 13, :column 1, :end-line 13, :end-column 14, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/ios/core.cljs", :line 13, :column 6, :end-line 13, :end-column 14}}, cloud-icon {:name luno.ios.core/cloud-icon, :file "src/luno/ios/core.cljs", :line 16, :column 1, :end-line 16, :end-column 16, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/ios/core.cljs", :line 16, :column 6, :end-line 16, :end-column 16}}, info-icon {:name luno.ios.core/info-icon, :file "src/luno/ios/core.cljs", :line 19, :column 1, :end-line 19, :end-column 15, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/ios/core.cljs", :line 19, :column 6, :end-line 19, :end-column 15}}, root-scene {:protocol-inline nil, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/ios/core.cljs", :line 22, :column 7, :end-line 22, :end-column 17, :arglists (quote ([{navigator :navigator}]))}, :name luno.ios.core/root-scene, :variadic false, :file "src/luno/ios/core.cljs", :end-column 17, :method-params ([p__21279]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{navigator :navigator}]))}, root {:protocol-inline nil, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/ios/core.cljs", :line 51, :column 7, :end-line 51, :end-column 11, :arglists (quote ([]))}, :name luno.ios.core/root, :variadic false, :file "src/luno/ios/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/ios/core.cljs", :line 62, :column 7, :end-line 62, :end-column 17, :arglists (quote ([]))}, :name luno.ios.core/mount-root, :variadic false, :file "src/luno/ios/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/ios/core.cljs", :line 65, :column 16, :end-line 65, :end-column 20, :export true, :arglists (quote ([]))}, :name luno.ios.core/init, :variadic false, :file "src/luno/ios/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {env.require-img env.require-img}, :cljs.analyzer/constants {:seen #{:on-press :initial-route :initialize-db :selected :ios :scale :background-color :get-ios-tab :MediaUrl :flex :source :icon :set-ios-tab :component :title :style :load-weather :rightButtonTitle :scenes :navigator :padding :app :onRightButtonPress :uri :city-wrapper-fn :main :resizeMode :callback :bing-image :platform :height :about :text}, :order [:uri :navigator :get-ios-tab :icon :selected :on-press :title :scale :set-ios-tab :platform :style :city-wrapper-fn :ios :scenes :main :bing-image :MediaUrl :source :height :flex :resizeMode :padding :background-color :about :initial-route :component :rightButtonTitle :onRightButtonPress :text :callback :load-weather :app :initialize-db]}, :doc nil}
;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name luno.handlers, :imports nil, :requires {re-frame.core re-frame.core, s schema.core, schema.core schema.core, clojure.walk clojure.walk, ajax.core ajax.core, luno.config luno.config, luno.db luno.db}, :uses {POST ajax.core, keywordize-keys clojure.walk, app-db luno.db, schema luno.db, bing-appid luno.config, dispatch re-frame.core, GET ajax.core, after re-frame.core, register-handler re-frame.core, openweathermap-appid luno.config}, :defs {check-and-throw {:protocol-inline nil, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/handlers.cljs", :line 12, :column 7, :end-line 12, :end-column 22, :arglists (quote ([a-schema db])), :doc "throw an exception if db doesn't match the schema."}, :name luno.handlers/check-and-throw, :variadic false, :file "src/luno/handlers.cljs", :end-column 22, :method-params ([a-schema db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a-schema db])), :doc "throw an exception if db doesn't match the schema."}, validate-schema-mw {:name luno.handlers/validate-schema-mw, :file "src/luno/handlers.cljs", :line 18, :column 1, :end-line 18, :end-column 24, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/handlers.cljs", :line 18, :column 6, :end-line 18, :end-column 24}}}, :require-macros {s schema.core, schema.core schema.core}, :cljs.analyzer/constants {:seen #{:initialize-db :load-city-image :ios-tab :loading? :response-format :set-ios-tab :load-city-image-failure :headers :error-handler :load-weather :load-city-image-success :d :error :android-drawer :json :set-android-drawer :load-weather-success :handler :bing-image :load-weather-failure :data :results}, :order [:initialize-db :set-android-drawer :android-drawer :set-ios-tab :ios-tab :load-weather :response-format :handler :error-handler :json :load-weather-success :load-weather-failure :loading? :load-city-image :error :data :headers :load-city-image-success :load-city-image-failure :results :d :bing-image]}, :doc nil}
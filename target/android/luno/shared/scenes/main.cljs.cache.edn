;; Analyzed by ClojureScript 1.7.170
{:use-macros {require-img env.require-img}, :excludes #{}, :name luno.shared.scenes.main, :imports nil, :requires {re-frame.core re-frame.core, r reagent.core, reagent.core reagent.core, ui luno.ui, luno.ui luno.ui, luno.shared.components.city luno.shared.components.city}, :uses {subscribe re-frame.core, dispatch-sync re-frame.core, dispatch re-frame.core, city-component luno.shared.components.city}, :defs {main-scene {:protocol-inline nil, :meta {:file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/shared/scenes/main.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([{platform :platform, navigator :navigator, city-wrapper-fn :city-wrapper-fn, style :style}]))}, :name luno.shared.scenes.main/main-scene, :variadic false, :file "/Users/alwxndr/Documents/Dev/_my/Luno/luno/src/luno/shared/scenes/main.cljs", :end-column 17, :method-params ([p__21250]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{platform :platform, navigator :navigator, city-wrapper-fn :city-wrapper-fn, style :style}]))}}, :require-macros {env.require-img env.require-img}, :cljs.analyzer/constants {:seen #{:align-items :key :wrapper-fn :city :flex :city-card :style :navigator :justify-content :get-data :city-wrapper-fn :platform :flex-direction :view}, :order [:platform :navigator :city-wrapper-fn :style :get-data :flex :view :city :wrapper-fn :city-card :key :flex-direction :justify-content :align-items]}, :doc nil}